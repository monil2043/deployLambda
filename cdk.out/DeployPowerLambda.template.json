{
 "Metadata": {
  "cdk_nag": {
   "rules_to_suppress": [
    {
     "reason": "policy for cloudwatch logs.",
     "id": "AwsSolutions-IAM4"
    },
    {
     "reason": "policy for cloudwatch logs.",
     "id": "AwsSolutions-IAM5"
    },
    {
     "reason": "lambda does input validation",
     "id": "AwsSolutions-APIG2"
    },
    {
     "reason": "not mandatory in a sample template",
     "id": "AwsSolutions-APIG1"
    },
    {
     "reason": "not mandatory in a sample template",
     "id": "AwsSolutions-APIG3"
    },
    {
     "reason": "not mandatory in a sample template",
     "id": "AwsSolutions-APIG6"
    },
    {
     "reason": "authorization not mandatory in a sample template",
     "id": "AwsSolutions-APIG4"
    },
    {
     "reason": "not using cognito",
     "id": "AwsSolutions-COG4"
    }
   ]
  }
 },
 "Resources": {
  "DeployPowerLambdaDynamicConfFeatureFlagImpF659A66B": {
   "Type": "AWS::AppConfig::Application",
   "Properties": {
    "Name": "FeatureFlagImp"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/DeployPowerLambda-DynamicConf/FeatureFlagImp/Resource"
   }
  },
  "DeployPowerLambdaDynamicConfdevelopmentBBAB10FE": {
   "Type": "AWS::AppConfig::Environment",
   "Properties": {
    "ApplicationId": {
     "Ref": "DeployPowerLambdaDynamicConfFeatureFlagImpF659A66B"
    },
    "Name": "dev"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/DeployPowerLambda-DynamicConf/development/Resource"
   }
  },
  "DeployPowerLambdaDynamicConfDeployPowerLambdaDynamicConfzero3528F722": {
   "Type": "AWS::AppConfig::DeploymentStrategy",
   "Properties": {
    "DeploymentDurationInMinutes": 0,
    "FinalBakeTimeInMinutes": 0,
    "GrowthFactor": 100,
    "GrowthType": "LINEAR",
    "Name": "DeployPowerLambda-DeployPoweyPowerLambdaDynamicConfzero-AA48B5EB",
    "ReplicateTo": "NONE"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/DeployPowerLambda-DynamicConf/DeployPowerLambda-DynamicConfzero/Resource"
   }
  },
  "DeployPowerLambdaDynamicConfDeployPowerLambdaDynamicConfversionConfigurationProfile3609F9DF": {
   "Type": "AWS::AppConfig::ConfigurationProfile",
   "Properties": {
    "ApplicationId": {
     "Ref": "DeployPowerLambdaDynamicConfFeatureFlagImpF659A66B"
    },
    "LocationUri": "hosted",
    "Name": "my_conf",
    "Type": "AWS.AppConfig.FeatureFlags"
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/DeployPowerLambda-DynamicConf/DeployPowerLambda-DynamicConfversion/ConfigurationProfile"
   }
  },
  "DeployPowerLambdaDynamicConfDeployPowerLambdaDynamicConfversion84008A0F": {
   "Type": "AWS::AppConfig::HostedConfigurationVersion",
   "Properties": {
    "ApplicationId": {
     "Ref": "DeployPowerLambdaDynamicConfFeatureFlagImpF659A66B"
    },
    "ConfigurationProfileId": {
     "Ref": "DeployPowerLambdaDynamicConfDeployPowerLambdaDynamicConfversionConfigurationProfile3609F9DF"
    },
    "Content": "{\n    \"features\": {\n        \"feature1\": {\n            \"default\": false,\n            \"rules\": {\n                \"enable feature 1 when a given key has a specified value\": {\n                    \"when_match\": true,\n                    \"conditions\": [\n                        {\n                            \"action\": \"EQUALS\",\n                            \"key\": \"customer_name\",\n                            \"value\": \"Good Customer\"\n                        }\n                    ]\n                }\n            }\n        },\n        \"ten_percent_off_campaign\": {\n            \"default\": true\n        }\n    },\n    \"countries\": [\n        \"ISRAEL\",\n        \"USA\"\n    ]\n}",
    "ContentType": "application/octet-stream"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/DeployPowerLambda-DynamicConf/DeployPowerLambda-DynamicConfversion/Resource"
   }
  },
  "DeployPowerLambdaDynamicConfDeployPowerLambdaDynamicConfversionDeployment000E48F92E1A1": {
   "Type": "AWS::AppConfig::Deployment",
   "Properties": {
    "ApplicationId": {
     "Ref": "DeployPowerLambdaDynamicConfFeatureFlagImpF659A66B"
    },
    "ConfigurationProfileId": {
     "Ref": "DeployPowerLambdaDynamicConfDeployPowerLambdaDynamicConfversionConfigurationProfile3609F9DF"
    },
    "ConfigurationVersion": {
     "Ref": "DeployPowerLambdaDynamicConfDeployPowerLambdaDynamicConfversion84008A0F"
    },
    "DeploymentStrategyId": {
     "Ref": "DeployPowerLambdaDynamicConfDeployPowerLambdaDynamicConfzero3528F722"
    },
    "EnvironmentId": {
     "Ref": "DeployPowerLambdaDynamicConfdevelopmentBBAB10FE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/DeployPowerLambda-DynamicConf/DeployPowerLambda-DynamicConfversion/Deployment000E4"
   }
  },
  "LambdaStackServiceRoleArn4C3B316A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "appconfig:GetLatestConfiguration",
          "appconfig:StartConfigurationSession"
         ],
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "dynamic_configuration"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "appconfig:*",
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "appconfig_full_access"
     }
    ],
    "Tags": [
     {
      "Key": "owner",
      "Value": "monilranka"
     },
     {
      "Key": "service",
      "Value": "validateAddress"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LambdaStack/ServiceRoleArn/Resource"
   }
  },
  "LambdaStackServiceRoleArnDefaultPolicy2E72D1AA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaStackServiceRoleArnDefaultPolicy2E72D1AA",
    "Roles": [
     {
      "Ref": "LambdaStackServiceRoleArn4C3B316A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LambdaStack/ServiceRoleArn/DefaultPolicy/Resource"
   }
  },
  "LambdaStackLambdaStackcommon0D28F4F6": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.12"
    ],
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-437676487212-us-east-1",
     "S3Key": "59abc66da77cc026cbb646d8ab17106bef893472f7fa1df3d604ed7dc25b6d50.zip"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LambdaStack/LambdaStackcommon/Resource",
    "aws:asset:path": "asset.59abc66da77cc026cbb646d8ab17106bef893472f7fa1df3d604ed7dc25b6d50",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Content"
   }
  },
  "LambdaStackvalidateAddress4D6E275F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-437676487212-us-east-1",
     "S3Key": "e59b819c0ca0f89000e3fbdcd892d417387ccf488bfd6cf7d770961d36c76821.zip"
    },
    "Environment": {
     "Variables": {
      "POWERTOOLS_SERVICE_NAME": "validateAddress",
      "LOG_LEVEL": "DEBUG",
      "CONFIGURATION_APP": "FeatureFlagImp",
      "CONFIGURATION_ENV": "dev",
      "CONFIGURATION_NAME": "my_conf",
      "CONFIGURATION_MAX_AGE_MINUTES": "5",
      "ROLE_ARN": "arn:partition:service:region:account-id:resource-type:resource-id",
      "USER_ID": "7NEURA45X5797"
     }
    },
    "FunctionName": "callExternalRestAPI",
    "Handler": "lambda_function.lambda_handler",
    "Layers": [
     {
      "Ref": "LambdaStackLambdaStackcommon0D28F4F6"
     },
     "arn:aws:lambda:us-east-1:027255383542:layer:AWS-AppConfig-Extension:113"
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "LambdaStackServiceRoleArn4C3B316A",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Tags": [
     {
      "Key": "owner",
      "Value": "monilranka"
     },
     {
      "Key": "service",
      "Value": "validateAddress"
     }
    ],
    "Timeout": 10,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "LambdaStackServiceRoleArnDefaultPolicy2E72D1AA",
    "LambdaStackServiceRoleArn4C3B316A"
   ],
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LambdaStack/validateAddress/Resource",
    "aws:asset:path": "asset.e59b819c0ca0f89000e3fbdcd892d417387ccf488bfd6cf7d770961d36c76821",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "LambdaStackvalidateAddressLogRetentionDB4DFAD3": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LambdaStack/validateAddress/LogRetention/Resource"
   }
  },
  "LambdaStackvalidateAddressEventInvokeConfigA8968FC5": {
   "Type": "AWS::Lambda::EventInvokeConfig",
   "Properties": {
    "FunctionName": {
     "Ref": "LambdaStackvalidateAddress4D6E275F"
    },
    "MaximumRetryAttempts": 0,
    "Qualifier": "$LATEST"
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LambdaStack/validateAddress/EventInvokeConfig/Resource"
   }
  },
  "LambdaStackMonitoringKey91B3D6AC": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "Description": "KMS Key for SNS Topic Encryption",
    "EnableKeyRotation": true,
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::437676487212:root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "owner",
      "Value": "monilranka"
     },
     {
      "Key": "service",
      "Value": "validateAddress"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LambdaStack/LambdaStack/MonitoringKey/Resource"
   }
  },
  "LambdaStackLambdaStackalarms3479467E": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "LambdaStackalarms",
    "KmsMasterKeyId": {
     "Fn::GetAtt": [
      "LambdaStackMonitoringKey91B3D6AC",
      "Arn"
     ]
    },
    "Tags": [
     {
      "Key": "owner",
      "Value": "monilranka"
     },
     {
      "Key": "service",
      "Value": "validateAddress"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LambdaStack/LambdaStack/LambdaStackalarms/Resource"
   }
  },
  "LambdaStackLambdaStackalarmsPolicy2915B0ED": {
   "Type": "AWS::SNS::TopicPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudwatch.amazonaws.com"
       },
       "Resource": {
        "Ref": "LambdaStackLambdaStackalarms3479467E"
       },
       "Sid": "0"
      }
     ],
     "Version": "2012-10-17"
    },
    "Topics": [
     {
      "Ref": "LambdaStackLambdaStackalarms3479467E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LambdaStack/LambdaStack/LambdaStackalarms/Policy/Resource"
   }
  },
  "LambdaStackLambdaStackLowFacadeLambdaStackLowFacadeDashboardsDashboardBFEFA4F7": {
   "Type": "AWS::CloudWatch::Dashboard",
   "Properties": {
    "DashboardBody": {
     "Fn::Join": [
      "",
      [
       "{\"start\":\"-PT8H\",\"periodOverride\":\"inherit\",\"widgets\":[{\"type\":\"text\",\"width\":24,\"height\":1,\"x\":0,\"y\":0,\"properties\":{\"markdown\":\"# Orders REST API Low Level Dashboard\"}},{\"type\":\"text\",\"width\":24,\"height\":1,\"x\":0,\"y\":1,\"properties\":{\"markdown\":\"### Lambda Function **[callExternalRestAPI](https://us-east-1.console.aws.amazon.com/lambda/home?region=us-east-1#/functions/",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       ")**\"}},{\"type\":\"metric\",\"width\":6,\"height\":5,\"x\":0,\"y\":2,\"properties\":{\"view\":\"timeSeries\",\"title\":\"TPS\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[{\"label\":\"TPS\",\"expression\":\"FILL(requests,0) / PERIOD(requests)\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"Invocations\",\"stat\":\"Sum\",\"visible\":false,\"id\":\"requests\"}]],\"yAxis\":{\"left\":{\"min\":0,\"label\":\"Rate\",\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":6,\"height\":5,\"x\":6,\"y\":2,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Latency\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"P50\",\"stat\":\"p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"P90\",\"stat\":\"p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"P99\",\"stat\":\"p99\"}]],\"annotations\":{\"horizontal\":[{\"label\":\"P90 > 3000 for 3 datapoints within 15 minutes\",\"value\":3000,\"yAxis\":\"left\"}]},\"yAxis\":{\"left\":{\"min\":0,\"label\":\"ms\",\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":6,\"height\":5,\"x\":12,\"y\":2,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Errors (rate)\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"Faults (avg)\"}]],\"yAxis\":{\"left\":{\"min\":0,\"label\":\"Rate\",\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":6,\"height\":5,\"x\":18,\"y\":2,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Rates\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"Throttles (avg)\"}],[\"AWS/Lambda\",\"ProvisionedConcurrencySpilloverInvocations\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"Provisioned Concurrency Spillovers (avg)\"}]],\"yAxis\":{\"left\":{\"min\":0,\"label\":\"Rate\",\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":8,\"height\":5,\"x\":0,\"y\":7,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Invocations\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"Invocations\",\"stat\":\"Sum\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"Throttles\",\"stat\":\"Sum\"}],[\"AWS/Lambda\",\"ConcurrentExecutions\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"Concurrent\",\"stat\":\"Maximum\"}],[\"AWS/Lambda\",\"ProvisionedConcurrencySpilloverInvocations\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"Provisioned Concurrency Spillovers\",\"stat\":\"Sum\"}]],\"yAxis\":{\"left\":{\"min\":0,\"label\":\"Count\",\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":8,\"height\":5,\"x\":8,\"y\":7,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Iterator\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Lambda\",\"IteratorAge\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"Iterator Age\",\"stat\":\"Maximum\"}]],\"yAxis\":{\"left\":{\"min\":0,\"label\":\"ms\",\"showUnits\":false}}}},{\"type\":\"metric\",\"width\":8,\"height\":5,\"x\":16,\"y\":7,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Errors\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"",
       {
        "Ref": "LambdaStackvalidateAddress4D6E275F"
       },
       "\",{\"label\":\"Faults\",\"stat\":\"Sum\"}]],\"yAxis\":{\"left\":{\"min\":0,\"label\":\"Count\",\"showUnits\":false}}}},{\"type\":\"text\",\"width\":24,\"height\":1,\"x\":0,\"y\":12,\"properties\":{\"markdown\":\"### Log Group **[",
       {
        "Fn::GetAtt": [
         "LambdaStackvalidateAddressLogRetentionDB4DFAD3",
         "LogGroupName"
        ]
       },
       "](https://us-east-1.console.aws.amazon.com/cloudwatch/home?region=us-east-1#logsV2:log-groups/log-group/",
       {
        "Fn::GetAtt": [
         "LambdaStackvalidateAddressLogRetentionDB4DFAD3",
         "LogGroupName"
        ]
       },
       ")**\"}},{\"type\":\"log\",\"width\":18,\"height\":10,\"x\":0,\"y\":13,\"properties\":{\"view\":\"table\",\"title\":\"Find ERROR (limit = 10)\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"query\":\"SOURCE '",
       {
        "Fn::GetAtt": [
         "LambdaStackvalidateAddressLogRetentionDB4DFAD3",
         "LogGroupName"
        ]
       },
       "' | fields @timestamp, @logStream, @message\\n| filter @message like /ERROR/\\n| sort @timestamp desc\\n| limit 10\"}},{\"type\":\"metric\",\"width\":6,\"height\":10,\"x\":18,\"y\":13,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Incoming logs\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Logs\",\"IncomingLogEvents\",\"LogGroupName\",\"",
       {
        "Fn::GetAtt": [
         "LambdaStackvalidateAddressLogRetentionDB4DFAD3",
         "LogGroupName"
        ]
       },
       "\",{\"label\":\"Logs\",\"stat\":\"SampleCount\"}]],\"yAxis\":{\"left\":{\"min\":0,\"label\":\"Count\",\"showUnits\":false}}}}]}"
      ]
     ]
    },
    "DashboardName": "LambdaStackLowFacade"
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LambdaStack/LambdaStack/LambdaStackLowFacade/LambdaStackLowFacade-Dashboards/Dashboard/Resource"
   }
  },
  "LambdaStackLambdaStackLowFacadeLambdaStackcallExternalRestAPILatencyP90p90FFA9179E": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ActionsEnabled": true,
    "AlarmActions": [
     {
      "Ref": "LambdaStackLambdaStackalarms3479467E"
     }
    ],
    "AlarmDescription": "P90 latency is too high.",
    "AlarmName": "LambdaStack-callExternalRestAPI-Latency-P90-p90",
    "ComparisonOperator": "GreaterThanThreshold",
    "DatapointsToAlarm": 3,
    "EvaluationPeriods": 3,
    "Metrics": [
     {
      "Id": "m1",
      "Label": "P90",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "LambdaStackvalidateAddress4D6E275F"
          }
         }
        ],
        "MetricName": "Duration",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "p90"
      },
      "ReturnData": true
     }
    ],
    "Threshold": 3000,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LambdaStack/LambdaStack/LambdaStackLowFacade/LambdaStack-callExternalRestAPI-Latency-P90-p90/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "owner",
      "Value": "monilranka"
     },
     {
      "Key": "service",
      "Value": "validateAddress"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs18.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-437676487212-us-east-1",
     "S3Key": "4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    },
    "Tags": [
     {
      "Key": "owner",
      "Value": "monilranka"
     },
     {
      "Key": "service",
      "Value": "validateAddress"
     }
    ]
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21R227CMAz9Ft7TsMI+YNymTUMaKtNekUlDmzVNolxAVdV/X5IW6CZeYp9j2Tn2meE0fcZtOoGLSUheJZwdcbu3QCrkqUMLShEpTqzA7eokFkpxRsAyKZCHG3FmWoqaChvgmioum4D2VoOlRRPYVWx3OnbttDwxTgP/Jo2l+Z/qN9VmGH2f1SEGNW4z2bfFuJNeRpzeZx0y8wMYQ63BixA8xktHKmqXYCjiUB9ziCtsoaH6+tGrE+S6zC3fnP2v7+IsK9qri6v+JzvEZWHwVhYZtb4WOqva4PaDRmE+eFXCE19SMRKoPonvfYER7BDh0uUXsKTE7RpMeZSg83iOG1hw0HWgYtJ1KKNGOk0oiot76womouRbweefzirnT5kmwFUJ+GnyMjg+DfFu81Bvx06PbX7g8QMju+HiiWpsKcUwdBfB2AAvvyenc5zOvKofw1iinT9nTXHWx19ponQupAIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "DeployPowerLambda/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "MonitoringTopic": {
   "Value": {
    "Fn::GetAtt": [
     "LambdaStackLambdaStackalarms3479467E",
     "TopicName"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}